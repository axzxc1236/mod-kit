<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAVASURBVHhe7dpdjuNGEAPgQa6U0+a0m+lGlUDTrP6RHWek
        4QfUQ7PY8speBPuQLzMzMzMzM/u1/vr6+oMTcWm3/4qzn7VzB7vcV9nt4MuvvPBO91VnP2vnDnaxr7Jb
        whedvfBO9x3OftaZO+wdz7gEfNHZC+903+HsZ525w97xjEvAF8WJ9YNXem1iLak+T1SnqjuY524ly2m7
        21Ev2ibWB9VpE+tO7dVEvVP7auLKlLqD2SznLKdfuBv1om1ifVCdNrHuqh3no13EwzszfAfPmaVqp7Jb
        4hflc8MZnxvMME9qrzI021f4Hk5UDtVeZbfEL8rnhjM+Nypj3OEzw33VUfheTqwfVB2V3RK/KJ5Vps6N
        yhh3+Mxwnx3OcPqlb2qXE5VDtVfZLakXxQwn1tM7ET3hDp8Z7rPDGU6/9E3tcqJyqPYquyX1opjhxHrp
        TsQHtVcZmu0rfAfPmaVqp7JbUi+KGU6syy8Hc9xxPtpFPLwzo+5gtptHdE/Vi2I+2kXUYT6aqHdqX01c
        maruYJ47lTWc4+5WqhfEfLSL6AHucWItqT5PVKdGd3iH58zSaGdmZmZmZmZmZmZmZmZmZmZmP8DK/9yx
        0rEPePcPsfK8lY59wH/xQ6w8c6Vza/gF4MR6uFd5m34RqE5Ote8Xv6ldm1gfVAcnak9UNycqD52IOsx5
        dwnqD48ZT1Q6lXOG58wazvCcWXM2w3NmStXjjM+pyi9h5Q9fdXZzxj0+NyprOOdzqnJUdTjnc6Oyy1j9
        w6seZqOJeqf2Obyf9atp99Bol6oO57Pz5ay8QNWpcgW72edzwxmfK1WvytGowzs84/TyFa28RNWpclb1
        OOdzozKl6lU5qjorudpfinoJzHii0q3kPNWe83ZuVNZwzucGM8yZ6vEZ4U7tL4dfKId3vUxwjxPrTu15
        VK9f/sZ5TqwPqpMTlSeqixO1B7O93Zh//F/OfwF+IfzR/cObmZnZO3zi3xX+t8sPlT/Mp/4CnPocvLzy
        kFEPdzixPqhOm1gfVKdNrKVZD/dVT3Vwoja02sfebj+ibuXuA/UglSXczfYRfSRLuJvtI9r+jFUrz1Ad
        lSXcjfZxHKsepHLMcGLdreZ8TpzzOakcM5xYdzu5ynbN7lefoXLMcGJ9qPItow9o1F5lCXc4sT6oTptY
        H0a7ZrZn3OfzGa/cn33+aD+6t2T08Kbar+Q8UenUPicq3WjXjHaK6mPGE5Wp3X6afdbqPo57Zg9vqg7m
        uftExmZ7pLqzDPPKao+tfMasM7sv4UNnl0c93KmJ2tt7SH0ew86oh3b6O89t8Nmze6Peyv0noweynW7a
        fXYcS6Ne7kbPWekoO/d2nn/muVV39TkdPmz1UtVfzfmcOOdzqvI02uNO7ZtqX+WVlR4+c+e5VX/nOdsv
        lKp7Kv9ExqpOlTPVU9nMrH/mmU11r8olLI8m6ofRrsH9J3up6mE+mqiX/VgvGd3BZ44m6odqV+X2P/rU
        D+If/4f69F+AOJqZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmdkL/v7nz9Os
        Unfb2EXwj4bnzCqqpzL7oaofq8pR1aly2zD6EtUOM5ykdjyoytFKx16gvuCzGZ4za1TWVDnCjhp7kfoy
        OeMzWulVeVPlCe9iT2V2En6ZOEntZoN2c1R1qtxOwC8TJ6lMqXq7ORp1ZndtA37R/MWqTKl6uzmqOlVu
        J+EXqr5UtcOMh/EOz5k1r2T2AvxCqy+VOzlJZQj3Va/aYY5jZmanqP+kXnHM7Nf6+voXb4FG35fNKGQA
        AAAASUVORK5CYII=
</value>
  </data>
</root>