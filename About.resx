<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAU/SURBVHhe7dpdjiNHDANgI1fKafe0m6mC1KBpqn7ajmfc
        ww/QQ1Gs9ra9CPYhNzMzMzMzM/u1/rnd/uJEXNrtP+PsZ+3cwS73VXY5+PIrL7zTfdbZz9q5g13sq+yS
        8EVnL7zTfYWzn3XmDnvFMz4CvujshXe6r3D2s87cYa94xkfAF8WJ9Z1nem1iLak+T1SnqjuY524ly2m7
        y1Ev2ibWB9VpE+tO7dVEvVP7auLKlLqD2SznLKdfuBr1om1ifVCdNrHuqh3no13EwzszfAfPmaVqp7JL
        4hflc8MZnxvMME9qrzI021f4Hk5UDtVeZZfEL8rnhjM+Nypj3OEzw33VUfheTqzvVB2VXRK/KJ5Vps6N
        yhh3+Mxwnx3OcPqlL2qXE5VDtVfZJakXxQwn1tM7ET3gDp8Z7rPDGU6/9EXtcqJyqPYquyT1opjhxHrp
        TsQHtVcZmu0rfAfPmaVqp7JLUi+KGU6syy8Hc9xxPtpFPLwzo+5gtptHdE3Vi2I+2kXUYT6aqHdqX01c
        maruYJ47lTWc4+5SqhfEfLSL6A7ucWItqT5PVKdGd3iH58zSaGdmZmZmZmZmZmZmZmZmZmZmP8DK/9yx
        0rE3ePUPsfK8lY69wf/xQ6w8c6VzafgF4MR6uFd5m34RqE5Ote8Xv6hdm1gfVAcnag9UNycqd52IOsx5
        9xHUHx4znqh0KucMz5k1nOE5s+ZshufMlKrHGZ9TlX+ElT981dnNGff43Kis4ZzPqcpR1eGcz43KPsbq
        H171MBtN1Du1z+H9rF9Nu4dGu1R1OJ+dP87KC1SdKlewm30+N5zxuVL1qhyNOrzDM04vf6KVl6g6Vc6q
        Hud8blSmVL0qR1VnJVf7j6JeAjOeqHQrOU+157ydG5U1nPO5wQxzpnp8RrhT+4/DL5TDu14muMeJdaf2
        PKrXL3/hPCfWB9XJicoD1cWJ2p3Z3i7MP/4v578AvxD+6P7hzczM7BXe8e8K/9vlh8of5l1/AU59Dl5e
        eciohzucWB9Up02sD6rTJtbSrIf7qqc6OFEbWu1jb7cfUbdy9456kMoS7mb7iN6SJdzN9hFtf8aqlWeo
        jsoS7kb7OI5VD1I5Zjix7lZzPifO+ZxUjhlOrLudXGW7Zverz1A5ZjixPlT5ltEHNGqvsoQ7nFgfVKdN
        rA+jXTPbM+7z+Yxn7s8+f7Qf3VsyenhT7Vdynqh0ap8TlW60a0Y7RfUx44nK1G4/zT5rdR/HPbOHN1UH
        89y9I2OzPVLdWYZ5ZbXHVj5j1pndl/Chs8ujHu7URO3lPaQ+j2Fn1EM7/Z3nNvjs2b1Rb+X+g9ED2U43
        7T47jqVRL3ej56x0lJ17O88/89yqu/qcDh+2eqnqr+Z8TpzzOVV5Gu1xp/ZNta/yykoPn7nz3Kq/85zt
        F0rVPZW/I2NVp8qZ6qlsZtY/88ymulflEpZHE/XDaNfg/p29VPUwH03Uy36sl4zu4DNHE/VDtaty+0bv
        +kH84/9Q7/4LEEczMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzN7wr9//j7M
        Gc/et2/APxqeM1tx9p59o+oHq/IK9nfuWWH0RaodZjhJ7XhQlSvYxbEnqS/zbIbnzBqVNVXOuMdne4L6
        MjnjM1rpVXlT5Yg7eZ7ds0X4heIktZsN2s2R6qjMnoBfKE5SmVL1dvOE+9HYC4y+WJUpVW83nzl7zwbw
        S1VfrNphxsN4h+fMGpWxlY5twi+1+mK5k5NUhnBf9Ua7tNIxM7Mh/E/pJ4+Z/Vq3238pwDMmM/96jwAA
        AABJRU5ErkJggg==
</value>
  </data>
</root>