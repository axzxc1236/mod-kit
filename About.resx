<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YII=
</value>
  </data>
</root>