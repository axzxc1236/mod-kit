<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAVrSURBVHhe7dpZbhxJEANQYa7k085pbWUiosCmGLlUtdtd
        Eh8QH8lgVm/CwB/zYWZmZmZmZj/Wfx8fv3EiLu32rzj7Wjt3sMt9lX07+OFXPvBO96qzr7VzB7vYV9m3
        hB909oF3us9w9rXO3GHPeMYt4AedfeCd7jOcfa0zd9gznnEL+EFxYv3gSq9NrCXV54nqVHUH89ytZDlt
        l9Q+Jyr3oD5Am1gfVKdNrDu1VxP1Tu2riStT6g5ms5yznH7hk9rxRPX9qTffJtYH1WkT667acT7aRTy8
        M8N38JxZqnYqazAf7SJ6f/ym+dxwxucGM8yT2qsMzfYVvocTlUO1V1mD+c7ubfEb5nPDGZ8blTHu8Jnh
        vuoofC8n1g+qjsoS7nBifS/8AfCsMnVuVMa4w2eG++xwhtMvfVK7nKgcqr3KGHZ4ovL+1JvGDCfW0zsR
        fcEdPjPcZ4cznH7pk9rlROVQ7VU2gv2de/+cesOY4cR66U7EB7VXGZrtK3wHz5mlaqeypsrTbP921BvG
        DCfWS18O7jgf7SIe3plRdzDbzSPqMN/Zva3qDWM+2kXUYT6aqHdqX01cmaruYJ47lTWcz3Y8UX1/1ZvG
        fLSL6AHucWItqT5PVKdGd3iH58zSzg4nKmZmZmZmZmZmZmZmZmZmZmb2t638TxsrHXuBZ/8QK89b6dgL
        /I0fYuWZK51vDb8AnFgP9ypv0y8C1cmp9v3iJ7VrE+uD6uBE7QvVzYnKQyeiDnPe3YJ685jxRKVTOWd4
        zqzhDM+ZNWczPGemVD3O+Jyq/BZW3nzV2c0Z9/jcqKzhnM+pylHV4ZzPjcpuY/XNqx5mo4l6p/Y5vJ/1
        q2n30GiXqg7ns/PtrHyAqlPlCnazz+eGMz5Xql6Vo1GHd3jG6eU7WvkQVafKWdXjnM+NypSqV+Wo6qzk
        an8r6kNgxhOVbiXnqfact3OjsoZzPjeYYc5Uj88Id2p/O/yBcnjXywT3OLHu1J5H9frlT5znxPqgOjlR
        +UJ1caL2YLa3b8w//g/nP4AfCH90//BmZmb2DK/4d4X/7fKm8od51R/AqdfByysPGfVwhxPrg+q0ifVB
        ddrEWpr1cF/1VAcnakOrfezt9iPqVu4+UA9SWcLdbB/RS7KEu9k+ou3XWLXyDNVRWcLdaB/HsepBKscM
        J9bdas7nxDmfk8oxw4l1t5OrbNfsfvUaKscMJ9aHKt8yeoFG7VWWcIcT64PqtIn1YbRrZnvGfT6fceX+
        7PVH+9G9JaOHN9V+JeeJSqf2OVHpRrtmtFNUHzOeqEzt9tPstVb3cdwze3hTdTDP3SsyNtsj1Z1lmFdW
        e2zlNWad2X0JHzq7POrhTk3Unt5D6vUYdkY9tNPfeW6Dz57dG/VW7n8xeiDb6abdZ8exNOrlbvSclY6y
        c2/n+WeeW3VXn9Phw1YvVf3VnM+Jcz6nKk+jPe7Uvqn2VV5Z6eEzd55b9Xees/2BUnVP5a/IWNWpcqZ6
        KpuZ9c88s6nuVbmE5dFE/TDaNbh/ZS9VPcxHE/WyH+slozv4zNFE/VDtqtz+oVf9IP7x39Sr/wDiaGZm
        ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZhf8+v/3l1l15a69Af7h8JxZhXt8
        tjdX/WBVjqpOlduG0ZeodpjhJLXjQVW+4spdA+qLPJvhObNGZU2Vz5y9Z4L6MjnjM1rpVXlT5Qo+Z+ee
        Tagvtk1Su9mg3XzFlbtG8MvESSpTqt5uvuLKXRPwC+UvVmVK1dvNUdWpcjsJv1D1paodZjyMd3jOrLmS
        2QX4hVZfKndyksoQ7qtetcNc7c3MbIv6z+odx8x+rI+PP/YIfRTt0JdUAAAAAElFTkSuQmCC
</value>
  </data>
</root>