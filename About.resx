<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>